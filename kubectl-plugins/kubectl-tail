#!/bin/bash

print_help() {
  echo "Usage: kubectl-tail [-l <label>] [--since <duration>] [--since-time <time>] [--limit <lines>] [--tail <lines>]"
}

if [ -z "$1" ]; then
  print_help
  exit 1
fi

label=""
since=""
since_time=""
limit=-1
tail=100

# parse input
while [ -n "$1" ]; do
  case "$1" in
  -l)
    label=$2
    shift
    ;;
  --since)
    since=$2
    shift
    ;;
  --since-time)
    since_time=$2
    shift
    ;;
  --limit)
    limit=$2
    shift
    ;;
  --tail)
    tail=$2
    shift
    ;;
  *)
    print_help
    exit 0
    ;;
  esac
  shift
done

args=()
if [ -n "$since" ]; then
  args+=("--since $since")
fi
if [ -n "$since_time" ]; then
  args+=("--since-time $since_time")
fi
if [ $limit -gt 0 ]; then
  args+=("--limit-bytes $limit")
  # reset tail if limit is set
  tail=0
fi
if [ $tail -gt 0 ]; then
  args+=("--tail $tail")
fi

# filter pods with fzf
if [ -z "$label" ]; then
  pods=$(kubectl get pods -o name | fzf -m --header="select pods, args: ${args[*]}")
else
  pods=$(kubectl get pods -l $label -o name | fzf -m --header="select pods, args: ${args[*]}")
fi

if [ -z "$pods" ]; then
  echo "No pods selected"
  exit 0
fi

# get logs
current_time=$(date +%s)
filename="logs_$current_time.log"
args+=(
  --timestamps
  --ignore-errors
)

# fetch logs
echo "" >>$filename
for pod in $pods; do
  echo "kubectl logs $pod ${args[@]} >>$filename"
  kubectl logs $pod ${args[@]} >>$filename
done

# sort logs
sort -n $filename -o $filename
